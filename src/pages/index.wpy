<template>
  <scroll-view scroll-y class="DrawerPage {{modalName=='sideModal'?'show':''}}"
               refresher-enabled="{{true}}"
               bindrefresherrefresh="onScrollPullDownRefresh"
               refresher-triggered="{{triggered}}" >
    <view style="padding: 12px 24px;">
      <view class="notice" wx:if="{{noticeMessagesList.length > 0}}">
        <image src="../assets/images/celebrate.png"></image>
        <swiper class='swiper-container' autoplay='true' model:current="{{noticeCurrentIndex}}" vertical='true' circular='true' interval='5000'>
          <repeat for="{{noticeMessagesList}}">
            <swiper-item>
              <rich-text nodes="{{item}}"></rich-text>
            </swiper-item>
          </repeat>
        </swiper>
      </view>
      <view class="all-panel">
        <view class="panel" wx:if="{{week.length}}">
          <view class="section">
            <view>本周
              <text> / Current</text>
            </view>
            <view>有 {{week.length}} 只猫会在本周内进入预产期</view>
          </view>
          <view>
            <repeat for="{{week}}">
              <view class="card" @tap="showModal({{item}})">
                <egg-card :model="item" :options="options"></egg-card>
              </view>
            </repeat>
          </view>
        </view>

        <view class="panel" wx:if="{{other.length}}">
          <view class="section">
            <view>其他
              <text> / Other</text>
            </view>
            <view>有 {{other.length}} 只猫等待进入预产期</view>
          </view>
          <view>
            <repeat for="{{other}}">
              <view class="card" @tap="showModal({{item}})">
                <egg-card :model="item" :options="options"></egg-card>
              </view>
            </repeat>
          </view>
        </view>

        <view class="panel" wx:if="{{history.length}}">
          <view class="section">
            <view>历史
              <text> / History</text>
            </view>
            <view>共有 {{history.length}} 只蛋已经破壳啦~</view>
          </view>
          <view>
            <repeat for="{{history}}">
              <view class="card" @tap="showModal({{item}})">
                <egg-card :model="item" :options="options"></egg-card>
              </view>
            </repeat>
          </view>
        </view>

        <view class="empty" wx:if="{{!history.length && !other.length && !week.length && init}}">
          <image src="../assets/images/children.svg"></image>
          <view>您没有任何记录~</view>
        </view>

        <button class="feedback" open-type="feedback">
          <text>意见反馈</text>
          <image src="../assets/images/next3.svg"></image>
        </button>

      </view>
    </view>
  </scroll-view>
  <view class="modal" catchtouchmove="true" wx:if="{{modal}}" @tap="closeModal"></view>
  <view wx:if="{{modal}}" class="drawer" catchtouchmove="true">
    <view class="drawer-header">
      <image class="avatar" src="{{modal.female_avatar}}"></image>
      <text>{{modal.female_name}} 💗 {{modal.male_name}}</text>
      <image wx:if="{{ modal.male_avatar }}" class="avatar" src="{{modal.male_avatar}}"></image>
      <view class="right">
        <image src="../assets/images/error.svg" @tap="closeModal" class="close"></image>
      </view>
    </view>
    <view class="drawer-body">

      <view wx:if="{{!modal.is_break}}">
        <view wx:if="{{modal.countdown>=0}}">
          <view class="desc">距离{{modal.female_name}}生产预计还有</view>
          <view class="day">
            <text class="t">{{modal.countdown}}</text>
            <text class="m">天</text>
          </view>
          <view class="cracked_at">预计: {{modal.cracked_at}}生产</view>
        </view>
        <view wx:else="{{modal.countdown<0}}">
          <view class="desc">距离{{modal.female_name}}生产已逾期</view>
          <view class="day danger">
            <text class="t">{{modal.countdown*-1}}</text>
            <text class="m">天</text>
          </view>
          <view class="cracked_at">预计: {{modal.cracked_at}}生产</view>
        </view>

      </view>

      <view wx:if="{{modal.is_break}}">
        <view class="cat_number flex align-center" wx:if="{{!showCatNumberInput && modal.cat_number !== 0}}">
          <repeat for="{{modal.cat_number}}">
            <image class="kitten" src="../assets/images/kitten.svg"></image>
          </repeat>
          <text wx:if="{{modal.cat_number > 6}}" class="text-cyan">（{{modal.cat_number}}）</text>
        </view>
        <view wx:else class="actions center">
          <view wx:if="{{!showCatNumberInput}}" class="go_edit" @tap="onEditCatNumber">
            <text>补充小猫数量</text>
            <image src="../assets/images/click.svg"></image>
          </view>
          <view wx:else class="edit">
            <input type="number" @input="onCatNumberChange" />
            <image src="../assets/images/confirm.svg" @tap="updateCatNumber"></image>
            <image src="../assets/images/cancel.svg" @tap="onCancelCatNumberChange"></image>
          </view>

        </view>
        <view class="desc">小生命已经破壳而出啦~，总孕期为</view>
        <view class="day">
          <text class="t">{{modal.during}}</text>
          <text class="m">天</text>
        </view>
        <view class="cracked_at">{{modal.breeding_at}} - {{modal.cracked_at}}</view>
      </view>

      <view class="tips">
        <view class="tips_header">
          <image src="../assets/images/education.svg"></image>
          <text>破壳小提示</text>
        </view>
        <view class="tips_body">{{modal.tips}}</view>
      </view>

      <view wx:if="{{modal.images.length > 0}}" class="tips margin-tb">
        <view class="tips_header">
          <image mode="aspectFit" src="../assets/images/movie.png"></image>
          <text>精彩回忆</text>
        </view>
        <view class="cu-avatar-group" style="width:100%;direction:ltr;">
          <image class="cu-avatar round bg-white lg" @tap="previewImages" wx:for="{{modal.images}}" wx:key="index" data-src="{{modal.images[index]}}" style="background-image:url({{modal.images[index]}});"/>
        </view>
      </view>

      <view class="actions {{ modal.is_break ? 'center' : '' }}">
        <view class="trash" @tap="delCurrent">
          <image src="../assets/images/can.svg"></image>
          删除
        </view>
        <view class="right" wx:if="{{!modal.is_break}}">
          <view>
            <navigator url="{{ '/pages/break?id=' + modal.id }}" class="done">已经破壳啦
              <image src="../assets/images/next.svg"></image>
            </navigator>
          </view>
        </view>
      </view>
    </view>
  </view>

  <!--  抽屉右侧bar-->
  <view class="DrawerClose {{modalName=='sideModal'?'show':''}}" bindtap="hideSideModal">
    <text class="cuIcon-pullright"></text>
  </view>
  <!--  全屏抽屉-->
  <scroll-view scroll-y class="DrawerWindow {{modalName=='sideModal'?'show':''}}">
    <view class="cu-modal {{userInfoEditModal?'show':''}}">
      <view class="cu-dialog" style="width:96%;">
        <view class="cu-bar bg-white justify-end">
          <view class="content">编辑信息</view>
          <view class="action" bindtap="hideUserInfoEditModal">
            <text class="cuIcon-close text-red"></text>
          </view>
        </view>
          <form>
            <view class="cu-form-group">
              <view class="title {{formErr.avatar?'text-red':''}}">头像<text wx:if="{{formErr.avatar}}" class="cuIcon-warnfill text-red margin-left-sm"></text></view>
              <button bind:chooseavatar="onChooseAvatar" class="cu-avatar round bg-gray" open-type="chooseAvatar" style="background-image:url({{formData.avatar?formData.avatar:'/assets/images/add.png'}});"></button>
            </view>
            <view class="cu-form-group">
              <view class="title {{formErr.nickname?'text-red':''}}">昵称<text wx:if="{{formErr.nickname}}" class="cuIcon-warnfill text-red margin-left-sm"></text></view>
              <input bindinput="nicknameInput" type="nickname"  maxlength="10" class="text-right" placeholder="请输入昵称" value="{{formData.nickname}}"></input>
            </view>
            <view class="cu-form-group">
              <view class="title">性别</view>
              <switch class="switch-sex" checked="{{formData.sex=='1'}}" bindchange="sexChange"></switch>
            </view>
            <view class="cu-form-group">
              <view class="title">地址选择</view>
              <picker mode="region" bindchange="regionChange" value="{{region}}" custom-item="{{customItem}}">
                <view class="picker">
                  {{formData.province?formData.province:'北京市'}}，{{formData.city?formData.city:'北京市'}}，{{formData.county?formData.county:'朝阳区'}}
                </view>
              </picker>
            </view>
          </form>
        <view class="cu-bar bg-white justify-end">
          <view class="action">
            <button class="cu-btn line-green text-green" bindtap="hideUserInfoEditModal">取消</button>
            <button class="cu-btn bg-green margin-left" bindtap="updateUserInfo">确定</button>
          </view>
        </view>
      </view>
    </view>
    <view class="cu-list menu card-menu margin-top-xl margin-bottom-xl shadow-lg">
      <view wx:if="{{userInfo.id}}" class="cu-list menu-avatar">
        <view class="cu-item padding-tb" style="height:180rpx;">
          <view class="cu-avatar round lg" style="background-image:url({{userInfo.avatar?userInfo.avatar:'/assets/images/avatar.jpg'}});">
            <view wx:if="{{userInfo.sex !== null}}" class="cu-tag badge {{userInfo.sex===1?'cuIcon-male bg-blue':'cuIcon-female bg-pink'}}"></view>
          </view>
          <view class="content flex-sub">
            <view class="text-black" bindtap="showUserInfoEditModal">{{userInfo.nickname?userInfo.nickname:'信息待完善'}}<text class="cuIcon-edit margin-left-sm text-grey"></text></view>
            <view class="text-gray text-sm flex justify-between">
              已陪伴您{{userInfo.has_use_days}}天
              <view class="text-gray">
                <text class="cuIcon-selection text-yellow margin-right-xs"></text>{{userInfo.orders_num}}
              </view>
            </view>
          </view>
        </view>
      </view>
      <view class="cu-item">
        <view class="cu-bar justify-center bg-white">
          <view class="action sub-title">
            <text class="text-bold text-grey">设置</text>
            <text class="text-ABC text-grey" style="font-size:10px;">options</text>
          </view>
        </view>
      </view>
      <view class="cu-item">
        <view class="content padding-tb-sm">
            <text class="text-bold cuIcon-male text-blue margin-right-xs"></text>
            <text class="text-grey">显示公猫信息</text>
        </view>
        <view class="action">
          <switch class="switch-sex sm" bindchange="switchSex" checked="{{options.showMaleInfo}}"></switch>
        </view>
      </view>
      <view class="cu-item">
        <view class="content padding-tb-sm">
          <text class="text-bold cuIcon-countdown text-red margin-right-xs"></text>
          <text class="text-grey">计时顺序</text>
        </view>
        <view class="action">
          <radio-group bindchange="countdownChange" class="block">
            <radio value="waiting" style="transform:scale(0.6)" checked="{{options.countdownType == 'waiting'}}" class="cyan radio"></radio><text class="text-grey text-sm">倒计时</text>
            <radio value="leaving" style="transform:scale(0.6)" checked="{{options.countdownType == 'leaving'}}" class="mauve radio margin-left-sm"></radio><text class="text-grey text-sm">正计时</text>
          </radio-group>
        </view>
      </view>
      <view class="cu-item arrow" @tap="editCats">
        <view class="content">
          <text class="cuIcon-emojiflashfill text-pink"></text>
          <text class="text-grey">猫咪信息</text>
        </view>
        <view class="action">
          <view class="cu-avatar-group">
            <repeat for="{{userInfo.cat_avatars}}">
              <view class="cu-avatar round sm" style="background-image:url({{item}});"></view>
            </repeat>
          </view>
<!--          <text class="text-grey text-sm">{{userInfo.cat_avatars.length}}只</text>-->
        </view>
      </view>
    </view>
  </scroll-view>

  <!--  悬浮操作按钮-->
  <view class="addation" wx:if="{{portals && modalName!=='sideModal' && modal===null}}">
    <button bindtap="showSideModal" data-target="sideModal" class="share cuIcon-list text-white text-xl text-bold">
    </button>

    <navigator url="/pages/create" class="btn">
      <text>新增记录</text>
      <image class="coverd" src="../assets/images/next1.svg"></image>
    </navigator>
  </view>
  <!--添加小程序引导-->
  <view wx:if="{{showAlert}}" class="float_badge">添加到 「我的小程序」,使用更方便哦~</view>

  <!-- 广告展示 -->
  <view class="mask" hidden="{{!showAd}}" catchtouchmove="true">
    <view class="AdView-mask">
      <image class="mask-img" mode="widthFix" src="{{ adInfo.image }}" show-menu-by-longpress="true" @tap="adJump({{ adInfo }})"></image>
      <image class="close-mask" bindtap="hiddenMsak" src="../assets/images/error.svg"></image>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import request from '@/utils/request'
import tools from '@/utils/tools'
import Websocket from '@/utils/websocket'
import Card from '@/components/EggCard'
import CuCustom from '@/colorui/components/cu-custom'

export default class Index extends wepy.page {
  config = {
    enablePullDownRefresh: true,
    navigationBarTitleText: '喵孕'
  }

  components = {
    'egg-card': Card,
    'cu-custom': CuCustom
  }

  mixins = []

  data = {
    init: false,
    showAlert: false,
    portals: false,
    modal: null,
    week: [],
    other: [],
    history: [],
    showAd: false,
    adInfo: null,
    showCatNumberInput: false,
    noticeMessagesList: [],
    noticeCurrentIndex: 0,
    triggered: false,
    options: {},
    userInfo: {},
    formData: {},
    formErr: {
      nickname: false,
      avatar: false
    },
    userInfoEditModal: false
  }

  computed = {}

  onShareAppMessage () {
    return {
      title: '「喵孕」 - 猫咪孕期小助手~'
    }
  }

  methods = {
    showModal(modal) {
      this.modal = modal
      this.$apply()
    },
    closeModal() {
      this.modal = null
      this.showCatNumberInput = false
      this.$apply()
    },
    showSideModal(e) {
      this.setData({
        modalName: e.currentTarget.dataset.target
      })
    },
    hideSideModal(e) {
      this.setData({
        modalName: null
      })
    },
    showUserInfoEditModal() {
      this.formData = this.userInfo
      this.userInfoEditModal = true
      this.$apply()
    },
    hideUserInfoEditModal() {
      this.userInfoEditModal = false
      this.$apply()
    },
    tabSelect(e) {
      this.setData({
        TabCur: e.currentTarget.dataset.id,
        scrollLeft: (e.currentTarget.dataset.id - 1) * 60
      })
    },
    async delCurrent() {
      await request(`/eggs/${this.modal.id}`).delete()
      this.modal = null
      this.$apply()
      await wepy.showToast({
        title: '删除记录成功',
        duration: 1000,
        success: () => {
          setTimeout(async () => {
            await this.getItems()
          }, 1000)
        }
      })
    },
    async updateCatNumber() {
      await request(`/eggs/${this.modal.id}`, {
        'cat_number': this.modal.cat_number
      }).put()
      var that = this
      this.history.forEach(function (item) {
        if (item.id === that.modal.id) {
          item.cat_number = that.modal.cat_number
          return true
        }
      })
      this.showCatNumberInput = false
      this.$apply()
    },
    adJump(info) {
      if (info.appid !== '') {
        wx.navigateToMiniProgram({
          'appId': 'wxd947200f82267e58',
          'path': 'pages/wjxqList/wjxqList?activityId=O2FWnaS'
        })
      } else {
        console.log('个人主体不支持跳转h5')
      }
    },
    switchSex(e) {
      this.options.showMaleInfo = e.detail.value
      this.$parent.options = this.options
      this.$apply()
      wx.setStorageSync('options', this.options)
    },
    countdownChange(e) {
      this.options.countdownType = e.detail.value
      this.$parent.options = this.options
      this.$apply()
      wx.setStorageSync('options', this.options)
    },
    editCats(e) {
      wx.showToast({
        title: '待开放,敬请期待～',
        icon: 'none'
      })
    },
    previewImages(event) {
      let currentUrl = event.target.dataset.src
      this.init = false
      this.$apply()
      wx.previewImage({
        current: currentUrl, // 当前显示图片的http链接
        urls: this.modal.images // 需要预览的图片http链接列表
      })
    }
  }

  getItems() {
    wx.showLoading()
    request('/eggs').get().then(data => {
      var firstCheck = this.init ? 1 : 0
      this.portals = data.portals
      this.week = data.week
      this.other = data.other
      this.longer = data.longer
      this.history = data.history
      this.init = true
      this.$apply()
      wx.setStorage({
        key: 'eggs',
        data: data
      })

      if (!firstCheck) {
        this.checkPortal()
      }
    }).catch(err => {
      var that = this
      console.log(err)
      wx.showToast({
        'title': '出错了...',
        'icon': 'error'
      })
      wx.getStorage({
        key: 'eggs',
        success(res) {
          var data = res.data
          that.portals = data.portals
          that.week = data.week
          that.other = data.other
          that.longer = data.longer
          that.history = data.history
          that.$apply()
        }
      })
    }).finally(res => {
      wx.hideLoading()

      // apply不生效scroll的triggered
      this.setData({
        triggered: false
      })
    })
  }

  checkPortal () {
    setTimeout(() => {
      var portalDate = wx.getStorageSync('portal_date')

      if (!portalDate) {
        return this.showPortalAlert()
      }

      var day = 60 * 60 * 24 * 1000

      if (portalDate + day < Date.now()) {
        return this.showPortalAlert()
      }
    }, 1000)
  }

  showPortalAlert () {
    this.showAlert = true
    wx.setStorageSync('portal_date', Date.now())
    this.$apply()

    setTimeout(() => {
      this.showAlert = false
      this.$apply()
    }, 6000)
  }

  events = {}

  // 获取用户信息
  getUserInfo() {
    request('/userinfo').post().then((res) => {
      this.userInfo = res
      this.$apply()
    })
  }

  onLoad() {
    // 初始化本地设置
    this.options = this.$parent.options
    this.$apply()

    var self = this
    if (!wx.getStorageSync('token')) {
      wx.login({
        success(res) {
          let code = res.code
          request('/auth/login', { code }).post().then(({token}) => {
            wx.setStorageSync('token', token)
            self.getItems()
            self.getUserInfo()
          })
        }
      })
    } else {
      this.getAd()
      this.getItems()
      this.getUserInfo()
    }
    this.initNotice()
  }

  onScrollPullDownRefresh() {
    this.getItems()
  }

  onShow() {
    if (this.init) {
      this.getItems()
    }
  }
  /**
   * 获取顶部通知列表
   */
  initNotice() {
    var websocket = new Websocket({
      isReconnection: true
    })
    // 连接成功后通过回调函数获取通知列表
    websocket.customSocketOpened(res => {
      websocket.sendWebSocketMsg({
        data: JSON.stringify({
          'event': 'getNoticeList'
        })
      })
    })
    // 初始化连接
    websocket.initWebSocket()

    // 监听消息接收
    var that = this
    websocket.onReceivedMsg(data => {
      console.log(data)
      // 如果有列表就初始化数组
      if (data.notice_messages_list !== undefined && data.notice_messages_list instanceof Array && data.notice_messages_list.length > 0) {
        that.noticeMessagesList = data.notice_messages_list
        that.$apply()
      }
      // 如果有单条数据就塞入数组
      if (data.notice_message !== undefined && data.notice_message !== '') {
        // 插入当前播放条数后两条位置
        that.noticeMessagesList.splice(that.noticeCurrentIndex + 2, 0, data.notice_message)
        // 去重
        that.noticeMessagesList = tools.array_unique(that.noticeMessagesList)
        // 最多保留十条
        if (that.noticeMessagesList.length > 10) {
          that.noticeMessagesList = that.noticeMessagesList.slice(0, 10)
        }
        that.$apply()
      }
    })
  }

  // 首屏广告蒙版
  getAd() {
    // @TODO: 缓存数据，减少请求（体量较大后优先优化）
    request('/ad').post().then(data => {
      // 通知开启且在有效期内
      if (data.status === 1 && tools.strtotime(data.start_time) < Date.now() && tools.strtotime(data.end_time) > Date.now()) {
        var lastAdId = wx.getStorageSync('home_ad_id')
        var lastShowDate = 0
        var displayTimes = 0
        if (lastAdId === data.id) {
          lastShowDate = wx.getStorageSync('home_ad_date')
          displayTimes = wx.getStorageSync('home_ad_times')
        }
        // 展示次数及展示间隔都满足条件才继续展示
        if (displayTimes < data.display_times && (lastShowDate + data.display_interval * 60 * 60 * 24 * 1000) < Date.now()) {
          wx.setStorageSync('home_ad_id', data.id)
          wx.setStorageSync('home_ad_date', Date.now())
          wx.setStorageSync('home_ad_times', displayTimes + 1)
          this.showAd = true
          this.adInfo = data
          this.$apply()
        }
      }
    })
  }
  // 点击隐藏弹出蒙版
  hiddenMsak() {
    this.showAd = false
    this.$apply()
  }

  onEditCatNumber() {
    this.showCatNumberInput = true
    this.$apply()
  }

  onCatNumberChange(e) {
    this.modal.cat_number = parseInt(e.detail.value)
  }

  onCancelCatNumberChange() {
    this.modal.cat_number = 0
    this.showCatNumberInput = false
    this.$apply()
  }

  onChooseAvatar(e) {
    wepy.showLoading({
      title: '图片上传中...'
    })
    // 调用上传图片接口
    request('/eggs/upload-avatar', {
      'file_path': e.detail.avatarUrl
    }).upload().then(data => {
      if (data.url) {
        this.formData.avatar = data.url
        this.$apply()
      }
    }).catch(err => {
      console.log('获取图片地址失败，请稍后重试', err)
    }).finally(res => {
      wepy.hideLoading()
    })
  }

  sexChange(e) {
    this.formData.sex = e.detail.value === 1 ? 1 : 2
    this.$apply()
  }
  regionChange(e) {
    this.formData.province = e.detail.value[0]
    this.formData.city = e.detail.value[1]
    this.formData.county = e.detail.value[2]
    this.$apply()
  }

  nicknameInput(e) {
    this.formData.nickname = e.detail.value
    this.$apply()
  }

  updateUserInfo() {
    let err = false
    if (!this.formData.nickname) {
      this.formErr.nickname = true
      err = true
    }
    if (!this.formData.avatar) {
      this.formErr.avatar = true
      err = true
    }
    if (err) {
      wx.showToast({
        title: '信息不完整',
        icon: 'error'
      })
      this.$apply()
      return false
    }
    let data = {
      nickname: this.formData.nickname,
      avatar: this.formData.avatar,
      sex: this.formData.sex,
      province: this.formData.province,
      city: this.formData.city,
      county: this.formData.county
    }
    this.formErr = []
    this.$apply()
    request('/update-userinfo', data).post().then((res) => {
      wx.showToast({
        title: '修改成功'
      })
      this.userInfo = res
      this.userInfoEditModal = false
      this.$apply()
    })
  }
}
</script>

<style lang="scss">
  page {
    background-image: var(--gradualBlue);
    width: 100vw;
    overflow: hidden;
    padding-top: 0;
  }

  .feedback {
    border: none;
    color: #a4adb7;
    font-size: 12px;
    font-weight: 500;
    background: none;
    margin-top: 24px;

    &::after {
      display: none;
    }

    image {
      width: 10px;
      height: 10px;
      margin-left: 4px;
      vertical-align: -1px;
    }
  }

  .modal {
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    opacity: .5;
    z-index: 1000;
    display: block;
    position: fixed;
    overflow: hidden;
    background: #000;
  }

  .all-panel {
    padding-bottom: 120px;
  }

  .drawer {
    left: 0;
    bottom: 0;
    width: 100%;
    height: auto;
    z-index: 1100;
    position: fixed;
    overflow: hidden;
    animation: up .3s;
    background: #ffffff;
    box-sizing: border-box;
    padding: 0px 24px 24px;
    padding-bottom: 36px;
    border-top-left-radius: 24px;
    border-top-right-radius: 24px;
    box-shadow: 0 -3px 3px rgba(26, 26, 26, .1);

    .drawer-header {
      top: 0;
      left: 0;
      width: 100%;
      height: 60px;
      display: flex;
      position: sticky;
      align-items: center;
      background: #ffffff;
      margin-bottom: 6px;

      .avatar {
        width: 24px;
        height: 24px;
        margin: 0 4px;
        background: #e3fdfd;
        border-radius: 50px;

      }

      text {
        color: #34495e;
        font-size: 18px;
        font-weight: bold;
      }

      .right {
        flex: auto;
        text-align: right;
      }

      .close {
        width: 32px;
        height: 32px;
      }
    }

    .drawer-body {
      .desc {
        color: #a4adb7;
        font-size: 13px;
        font-weight: 500;
        text-align: center;
      }

      .cracked_at {
        color: #a4adb7;
        font-size: 12px;
        font-weight: 500;
        text-align: center;
        margin-bottom: 10px;
      }

      .cat_number {
        text-align: center;
        justify-content: center;
        image {
          width: 20px;
          height: 20px;
        }
      }

      .day {
        margin: 16px auto 0;
        text-align: center;

        .t {
          color: #71c9ce;
          font-size: 64px;
          font-weight: bold;
          text-align: center;
        }

        .m {
          color: #a4adb7;
          font-size: 13px;
          font-weight: 500;
          margin-left: 6px;
          vertical-align: 3px;
        }

        &.danger {
          .t {
            color: #eb6383;
          }
        }
      }

      .tips {
        margin-bottom: 24px;

        .tips_header {
          display: flex;
          padding-left: 6px;
          margin-bottom: 6px;
          align-items: center;

          image {
            width: 16px;
            height: 16px;
            margin-right: 4px;
          }

          text {
            color: #34495e;
            font-size: 14px;
            font-weight: bold;
          }
        }

        .tips_body {
          padding: 12px;
          color: #4d555f;
          font-size: 12px;
          font-weight: 700;
          line-height: 1.75;
          border-radius: 6px;
          background: #f8f8f8;
          display: inline-block;
          word-break: break-all;
        }
      }

      .actions {
        display: flex;
        padding: 0 12px;
        align-items: center;

        &.center {
          justify-content: center;
        }

        view {
          display: inline-block;
        }

        .trash {
          color: #eb6383;
          font-size: 12px;
          font-weight: 600;
        }

        .right {
          flex: auto;
          text-align: right;

          .done {
            color: #71c9ce;
            font-size: 12px;
            font-weight: 600;
          }
        }

        image {
          width: 12px;
          height: 12px;
          vertical-align: -1.5px;
        }

        .go_edit {
          color: #009788;
          font-size: 12px;
          font-weight: 500;
          line-height: 29px;
          height: 30px;
        }

        .edit {
          height: 30px;

          input {
            width: 52px;
            height: 16px;
            font-size: 12px;
            font-weight: 500;
            border-radius: 8px;
            border: 1px solid #e7eef7;
            padding: 0 10px;
            margin-left: 24px;
            display: inline-block;
            vertical-align:middle;
          }

          image {
            width: 12px;
            height: 12px;
            vertical-align:middle;
            padding-left: 10px;
            box-sizing: unset;
          }
        }
      }
    }
  }

  .panel {
    margin-top: 32px;
  }

  .section {
    padding-left: 12px;

    view {
      text {
        color: #a4adb7;
        display: inline;
        font-size: 10px;
        margin-left: 2px;
        word-spacing: 6px;
      }
    }

    view:first-child {
      display: block;
      color: #34495e;
      font-size: 20px;
      font-weight: 700;
      margin-bottom: 6px;
    }

    view:last-child {
      color: #a4adb7;
      display: block;
      font-size: 12px;
      font-weight: 500;
      margin-bottom: 12px;
    }
  }

  .panel:first-child {
    margin-top: 0;
  }

  .card {
    padding: 12px;
    display: flex;
    position: relative;
    align-items: center;
    border-bottom: 1px dashed #f5f7fd;
    background: rgba(255, 255, 255, 0.85);
    box-shadow: rgba(0, 0, 0, 0.04) 0px 1px 1px 0px;

    .avatar {
      width: 40px;
      height: 40px;
      background: #e3fdfd;
      border-radius: 50px;
    }

    .meta {
      margin-left: 12px;

      .field-top {
        color: #34495e;
        font-size: 16px;
        font-weight: bold;
        margin-bottom: 3px;
        display: inline-block;
      }

      .field-bottom {
        color: #a4adb7;
        font-size: 11px;
        font-weight: 500;
      }
    }

    .day {
      top: 50%;
      right: 16px;
      color: #71c9ce;
      font-size: 18px;
      font-weight: bold;
      position: absolute;
      transform: translateY(-50%);
    }

    .break {
      top: 50%;
      right: 16px;
      position: absolute;
      transform: translateY(-50%);

      image {
        width: 32px;
        height: 32px;
        display:flex;
        justify-content: center;
        margin: 2px auto;
      }

      text {
        display:flex;
        justify-content: center;
        font-size: 12px;
        font-weight: bold;
        color: #71c9ce;
      }
    }
  }

  .card:first-child {
    border-top-left-radius: 12px;
    border-top-right-radius: 12px;
  }

  .card:last-child {
    border-bottom-left-radius: 12px;
    border-bottom-right-radius: 12px;
  }

  .history {
    color: #a4adb7;
    font-size: 12px;
    font-weight: 500;
    text-align: center;
  }

  .addation {
    left: 0;
    width: 100%;
    display: flex;
    position: fixed;
    bottom: 2.55rem;
    flex-flow:  row nowrap;
    justify-content: space-around;

    .share {
      margin: 0;
      border: none;
      padding: 12px 24px;
      display: inline-block;
      width: auto;
      height: auto;
      line-height: initial;
      font-size: initial;
      border-radius: 20px;
      background: #cca8e9;;
      box-sizing: border-box;
      box-shadow: 0.08533rem 0.21333rem 0.64rem 0 #cca8e9;
      &::after {
        display: none;
      }
      .cover {
        width: 18px;
        height: 18px;
        vertical-align: middle;
      }
      font-size: 19px;
    }

    .btn {
      color: #ffffff;
      font-size: 14px;
      font-weight: 700;
      padding: 12px 32px;
      border-radius: 20px;
      background: #71c9ce;
      display: inline-block;
      box-shadow: 0.08533rem 0.21333rem 0.64rem 0 #71c9ce;

      .coverd {
        width: 12px;
        height: 12px;
        margin-left: 4px;
        vertical-align: -1.5px;
      }
    }
  }

  .empty {
    padding: 1.25rem;
    text-align: center;
    box-sizing: border-box;

    image {
      width: 84px;
      height: 84px;
      padding-top: 2.25rem;
      display: inline-block;
    }

    view {
      color: #a4adb7;
      font-size: 13px;
      font-weight: 500;
      margin-top: 12px;
      vertical-align: 3px;
    }
  }

  @keyframes up {
    0% {
      transform: translateY(100%);
    }
    100% {
      transform: translateY(0);
    }
  }

  .float_badge {
    top: 7px;
    right: 24px;
    color: #ffffff;
    position: fixed;
    font-size: 14px;
    font-weight: 500;
    padding: 8px 12px;
    border-radius: 10px;
    background: #71c9ce;
    &:before{
      content: '';
      width:0;
      height:0;
      top: -8px;
      right: 40px;
      position: absolute;
      display:inline-block;
      border-bottom: 8px solid #71c9ce;
      border-left:6px solid transparent;
      border-right: 6px solid transparent;
    }
  }

  /* 广告弹窗 */
  .mask {
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, .5);
    position: fixed;
    top: 0;
    left: 0;
    z-index: 99998;
    display:flex;
    justify-content: center;
    align-items: center;
  }

  .mask .AdView-mask {
    display:flex;
    justify-content: center;
    align-items: center;
    width: 332px;
    margin: 10px auto;
    position: relative;
    top: -40px;
  }

  .mask .AdView-mask .mask-img {
    width: 80%;
  }

  .mask .AdView-mask .close-mask {
    position: absolute;
    width: 40px;
    height: 40px;
    bottom: -80px;
    left: 146px;
  }

  .notice {
    background: #ffffff;
    border-radius: 15px;
    padding: 2px 12px;
    display: flex;
    justify-items: center;
    align-content: center;
    margin-bottom: 8px;

    image {
      width: 20px;
      height: 20px;
    }

    .swiper-container {
      margin-left: 6px;
      width: 100%;
      height: 20px;

      swiper-item {
        position: absolute;
        transform: translateY(-50%);
        width: 100%;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        letter-spacing: 1px;
        display: flex;
        align-items: center;

        rich-text {
          color: #38485C;
          font-size: 12px;
          font-weight: 400;
          font-family: PingFang SC;
          overflow: hidden;
          white-space: nowrap;
          text-overflow:ellipsis;
        }
      }
    }
  }

  .DrawerPage {
    position: fixed;
    width: 100vw;
    height: 100vh;
    left: 0vw;
    background-color: #f1f1f1;
    transition: all 0.4s;
  }

  .DrawerPage.show {
    transform: scale(0.9, 0.9);
    left: 87vw;
    box-shadow: 0 0 60rpx rgba(0, 0, 0, 0.2);
    transform-origin: 0;
  }

  .DrawerWindow {
    position: absolute;
    width: 85vw;
    height: 100vh;
    left: 0;
    top: 0;
    transform: scale(0.9, 0.9) translateX(-100%);
    opacity: 0;
    pointer-events: none;
    transition: all 0.4s;
  }

  .DrawerWindow.show {
    transform: scale(1, 1) translateX(0%);
    opacity: 1;
    pointer-events: all;
  }

  .DrawerClose {
    position: absolute;
    width: 40vw;
    height: 100vh;
    right: 0;
    top: 0;
    color: transparent;
    padding-bottom: 30rpx;
    display: flex;
    align-items: flex-end;
    justify-content: center;
    background-image: linear-gradient(90deg, rgba(0, 0, 0, 0.01), rgba(0, 0, 0, 0.6));
    letter-spacing: 5px;
    font-size: 50rpx;
    opacity: 0;
    pointer-events: none;
    transition: all 0.4s;
  }

  .DrawerClose.show {
    opacity: 1;
    pointer-events: all;
    width: 15vw;
    color: #fff;
  }

  .DrawerPage .cu-bar.tabbar .action button.icon {
    width: 64rpx;
    height: 64rpx;
    line-height: 64rpx;
    margin: 0;
    display: inline-block;
  }

  .DrawerPage .cu-bar.tabbar .action .cu-avatar {
    margin: 0;
  }

  .DrawerPage .nav {
    flex: 1;
  }

  .DrawerPage .nav .cu-item.cur {
    border-bottom: 0;
    position: relative;
  }

  .DrawerPage .nav .cu-item.cur::after {
    content: "";
    width: 10rpx;
    height: 10rpx;
    background-color: currentColor;
    position: absolute;
    bottom: 10rpx;
    border-radius: 10rpx;
    left: 0;
    right: 0;
    margin: auto;
  }

  .DrawerPage .cu-bar.tabbar .action {
    flex: initial;
  }
</style>
